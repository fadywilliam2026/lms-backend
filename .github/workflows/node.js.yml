# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  DATABASE_URL: 'postgresql://postgres:postgres@localhost:5432/lms'
  JWT_ACCESS_SECRET: '773026b5cce26...'
  JWT_REFRESH_SECRET: '31d4c06894f79...'
  ARGON2_SECRET: '2fe83e2826d47...'
  GOOGLE_CLOUD_STORAGE_SERVICE_ACCOUNT: '{}'
  GOOGLE_CLOUD_STORAGE_BUCKET: 'lms-store'
  PAID_IN_CAPITAL: '15000000'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:14

        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: lms

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install prisma CLI
        run: pnpm db:generate
          pnpm prisma migrate deploy || echo "Prisma migration failed, check logs"

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test:github:actions

  auto-merge-dependabot:
    name: Auto-merge Dependabot PRs
    timeout-minutes: 10
    needs: [build]
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Merge PR from dependabot
        uses: fastify/github-action-merge-dependabot@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          target: minor
