import { Holder, Transfer } from '@prisma/client';
import { CreateUserDto } from '../../auth/dto/auth.dto';
import { CreateClientsDto } from '../../clients/dto/create-clients.dto';
import { Roles } from '../../common/types/role';
import { CreateLoanAccountDto } from '../../loan-accounts/dto/create-loan-account.dto';
import { CreateLoanProductDto } from '../../loanProducts/dto/LoanProduct.dto';

const loanProduct: CreateLoanProductDto = {
  arrearsSettings: {
    defaultTolerancePercentageOfOutstandingPrincipal: 0,
    maxTolerancePercentageOfOutstandingPrincipal: 10,
    minTolerancePercentageOfOutstandingPrincipal: 0,
    defaultTolerancePeriod: 0,
    maxTolerancePeriod: 10,
    minTolerancePeriod: 0,
    monthlyToleranceDay: 0,
  },
  category: 'PERSONAL_LENDING',
  currencyCode: 'EGP',
  gracePeriodType: 'NONE',
  interestRateSetting: {
    compoundingFrequency: 'EVERY_DAY',
    defaultInterestRate: 0,
    allowNegativeInterestRate: true,
    maxInterestRate: 0,
    minInterestRate: 0,
  },
  fixedDaysOfMonth: [0],
  daysInYear: 'ACTUAL_365_FIXED',
  interestApplicationMethod: 'ON_DISBURSEMENT',
  interestBalanceCalculationMethod: 'ONLY_PRINCIPAL',
  interestCalculationMethod: 'FLAT',
  interestType: 'SIMPLE_INTEREST',
  scheduleInterestDaysCountMethod: 'USING_INSTALLMENT_PERIODICITY',
  dormancyPeriodDays: 0,
  name: 'string',
  principalPaymentSettings: {
    defaultAmount: 0,
    defaultPercentage: 0,
    maxAmount: 0,
    maxPercentage: 0,
    minAmount: 0,
    minPercentage: 0,
  },
  cappingConstraintType: 'SOFT_CAP',
  cappingMethod: 'OUTSTANDING_PRINCIPAL_PERCENTAGE',
  amortizationMethod: 'STANDARD_PAYMENTS',
  latePaymentsRecalculationMethod: 'INCREASE_OVERDUE_INSTALLMENTS',
  paymentMethod: 'HORIZONTAL',
  elementsRecalculationMethod: 'FIXED_PRINCIPAL_EXPECTED',
  futurePaymentsAcceptance: true,
  prepaymentAcceptance: true,
  prepaymentRecalculationMethod: 'NO_RECALCULATION',
  principalPaidInstallmentStatus: 'PARTIALLY_PAID',
  defaultPrincipalInstallmentInterval: 0,
  defaultInstallmentPeriodCount: 0,
  accrueLateInterest: true,
  active: true,
  installmentAllocationOrder: ['PRINCIPAL'],
  loanPenaltyCalculationMethod: 'NONE',
  description: 'string',
  allowRedraw: true,
  cappingaApplyAccruedChargesBeforeLocking: true,
  shortMonthHandlingMethod: 'LAST_DAY_IN_MONTH',
  scheduleDueDatesMethod: 'INTERVAL',
  roundingInstallmentScheduleMethod: 'NO_ROUNDING',
  installmentScheduleMethod: 'NONE',
  installmentReschedulingMethod: 'NONE',
  installmentPeriodUnit: 'DAYS',
  installmentElementsRoundingMethod: 'NO_ROUNDING',
  installmentCurrencyRounding: 'NO_ROUNDING',
  taxesOnPenaltyEnabled: true,
  taxesOnInterestEnabled: true,
  taxesOnFeesEnabled: true,
  taxCalculationMethod: 'INCLUSIVE',
  settlementOptions: 'FULL_DUE_AMOUNTS',
  offsetPercentage: 0.0,
  minPenaltyRate: 0,
  maxPenaltyRate: 1,
  minNumInstallments: 0,
  minLoanAmount: 0,
  minGracePeriod: 0,
  maxNumInstallments: 60,
  maxNumberOfDisbursementTranches: 0,
  maxLoanAmount: 10000,
  maxGracePeriod: 10,
  lockPeriodDays: 0,
  type: 'FIXED_TERM_LOAN',
  loanPenaltyGracePeriod: 0,
  defaultLoanAmount: 0,
  defaultGracePeriod: 0,
  defaultPenaltyRate: 0,
  defaultNumInstallments: 0,
  cappingPercentage: 0,
};

const loanAccount: Partial<CreateLoanAccountDto> = {
  disbursementDetails: {
    disbursementAt: new Date('2020-01-01'),
  },
  accountState: 'PARTIAL_APPLICATION',
  interestCalculationMethod: 'FLAT',
  interestChargeFrequency: 'ANNUALIZED',
  interestRate: 10,
  loanAmount: 1000,
  loanName: '7mada',
  numInstallments: 12,
  installmentPeriodCount: 0,
  installmentPeriodUnit: 'MONTHS',
};

const user: CreateUserDto = {
  phone: '0101010101',
  email: 'email@email.com',
  password: '123456',
  firstName: 'John',
  lastName: 'Doe',
  role: Roles.agent,
  roleId: 4,
  controlOfCashFlow: Holder.partner,
  carrierOfPaymentRisk: Holder.partner,
  methodOfLoanRepayment: Transfer.partner,
};

const client: CreateClientsDto = {
  firstName: 'John',
  lastName: 'Doe',
  email: 'noran.raafat@gmail.com',
  phone: '01005258982',
  address: 'address',
  nationalId: '123456789',
  taxRecordId: '123456789',
  state: 'ACTIVE',
  commercialName: 'Commercial Name',
  notes: '',
  userId: null,
};

export { loanAccount, loanProduct, user, client };
